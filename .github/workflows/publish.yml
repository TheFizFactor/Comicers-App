# Publish workflow - Creates draft releases for all builds
name: Publish
permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write
  pages: write
  id-token: write
on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  publish-win:
    strategy:
      matrix:
        node: ['22']
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - run: pnpm i
      - run: pnpm dist:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Windows build
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: apps/desktop/dist/win

  publish-linux:
    strategy:
      matrix:
        node: ['22']
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      # Add minimal Linux build dependencies
      - name: Install Linux build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-0 \
            libnotify4 \
            libnss3 \
            libxss1 \
            libxtst6 \
            xdg-utils \
            libsecret-1-dev \
            build-essential \
            libx11-dev \
            libx11-xcb-dev \
            libxcb1-dev \
            libxcb-dri2-0-dev \
            libxcb-dri3-dev \
            libxcb-randr0-dev \
            libxcb-render0-dev \
            libxcb-shape0-dev \
            libxcb-sync-dev \
            libxcb-xfixes0-dev \
            libxcb-xinerama0-dev \
            libxcb-xkb-dev \
            libxkbcommon-dev \
            libxkbcommon-x11-dev \
            libxrender-dev \
            libasound2-dev \
            libatk1.0-dev \
            libatk-bridge2.0-dev \
            libcups2-dev \
            libdrm-dev \
            libexpat1-dev \
            libgbm-dev \
            libgdk-pixbuf2.0-dev \
            libglib2.0-dev \
            libgtk-3-dev \
            libnspr4-dev \
            libnss3-dev \
            libpango1.0-dev \
            libpangocairo-1.0-0 \
            libx11-6 \
            libx11-xcb1 \
            libxcb1 \
            libxcomposite1 \
            libxcursor1 \
            libxdamage1 \
            libxext6 \
            libxfixes3 \
            libxi6 \
            libxrandr2 \
            libxrender1 \
            libxss1 \
            libxtst6 \
            libxxf86vm1
      - run: pnpm i
      - run: pnpm dist:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Linux build
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: apps/desktop/dist/linux

  publish-mac:
    strategy:
      matrix:
        node: ['22']
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - run: pnpm i
      - run: pnpm dist:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          # CSC_LINK: ${{ secrets.CSC_LINK }}
          # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
      - name: Upload macOS build
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: apps/desktop/dist/mac

  create-release:
    needs: [publish-win, publish-linux, publish-mac]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      
      - name: Get version from package.json
        id: get_version
        run: |
          VERSION=$(node -p "require('./apps/desktop/package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create and push tag
        run: |
          git tag -a "v${{ steps.get_version.outputs.version }}" -m "Release v${{ steps.get_version.outputs.version }}"
          git push origin "v${{ steps.get_version.outputs.version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Windows build
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: dist/win

      - name: Download Linux build
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: dist/linux

      - name: Download macOS build
        uses: actions/download-artifact@v4
        with:
          name: macos-build
          path: dist/mac

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          body: |
            ## What's Changed
            - Built for Windows, Linux, and macOS
            - All assets are included in this release
          generate_release_notes: true
          prerelease: false
          files: |
            dist/win/**/*
            dist/linux/**/*
            dist/mac/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm i --no-frozen-lockfile
      - name: Install docs dependencies
        run: cd apps/docs && pnpm i
      - name: Build docs
        run: cd apps/docs && pnpm build
      - name: Create CNAME file in dist directory
        run: echo "comicers.org" > apps/docs/src/.vitepress/dist/CNAME
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./apps/docs/src/.vitepress/dist
          force_orphan: true # This creates a clean gh-pages branch without history