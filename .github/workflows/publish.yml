# Publish workflow - Creates draft releases for all builds
name: Publish
permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write
  pages: write
  id-token: write
on:
  push:
    branches:
      - master
jobs:
  publish-win:
    strategy:
      matrix:
        node: ['22']
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - run: pnpm i
      - run: pnpm dist:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Windows build
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: apps/desktop/dist/win

  publish-linux:
    strategy:
      matrix:
        node: ['22']
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      # Add minimal Linux build dependencies
      - name: Install Linux build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-0 \
            libnotify4 \
            libnss3 \
            libxss1 \
            libxtst6 \
            xdg-utils \
            libgconf2-4 \
            libsecret-1-dev \
            build-essential
      - run: pnpm i
      - run: pnpm dist:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Linux build
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: apps/desktop/dist/linux

  publish-mac:
    strategy:
      matrix:
        node: ['22']
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - run: pnpm i
      - run: pnpm dist:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          # CSC_LINK: ${{ secrets.CSC_LINK }}
          # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
      - name: Upload macOS build
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: apps/desktop/dist/mac

  create-release:
    needs: [publish-win, publish-linux, publish-mac]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get or create tag
        id: tag
        run: |
          if [[ ! ${{ github.ref }} =~ ^refs/tags/ ]]; then
            # Get latest tag
            latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
            # Increment patch version
            new_tag=$(echo $latest_tag | awk -F. -v OFS=. '{$NF++;print}')
            echo "Creating new tag: $new_tag"
            git tag $new_tag
            git push origin $new_tag
            echo "tag=$new_tag" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Download Windows build
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: dist/win

      - name: Download Linux build
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: dist/linux

      - name: Download macOS build
        uses: actions/download-artifact@v4
        with:
          name: macos-build
          path: dist/mac

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Release ${{ steps.tag.outputs.tag }}
          generate_release_notes: true
          prerelease: false
          files: |
            dist/win/**/*
            dist/linux/**/*
            dist/mac/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm i --no-frozen-lockfile
      - name: Install docs dependencies
        run: cd apps/docs && pnpm i
      - name: Build docs
        run: cd apps/docs && pnpm build
      - name: Create CNAME file in dist directory
        run: echo "comicers.org" > apps/docs/src/.vitepress/dist/CNAME
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./apps/docs/src/.vitepress/dist
          force_orphan: true # This creates a clean gh-pages branch without history